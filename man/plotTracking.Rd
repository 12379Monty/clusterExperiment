% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/plotTracking.R
\docType{methods}
\name{plotTracking}
\alias{clusterTrackingPlot}
\alias{plotTracking}
\title{Functions for Visualizing assigments of samples to clusters across multiple clusterings}
\usage{
plotTracking(clusters, index = NULL, reuseColors = FALSE,
  matchToTop = FALSE, plot = TRUE, unassignedColor = "white",
  missingColor = "grey", minRequireColor = 0.3, startNewColors = FALSE,
  colPalette = bigPalette, ...)

clusterTrackingPlot(colorMat, names = rownames(m), add = FALSE, x = NULL,
  ylim = NULL, tick = FALSE, ylab = "", xlab = "", axisLine = 2,
  box = FALSE, ...)
}
\arguments{
\item{clusters}{A matrix of with each column corresponding to a clustering and
each row a sample. The plotting will plot them in order of this matrix,
and their order influences the plot greatly.}

\item{index}{A predefined order in which the samples will be plotted.
Otherwise the order is found internally}

\item{reuseColors}{Logical. Whether each row should consist of the same set
of colors. By default (FALSE) each cluster that the algorithm doesn't
identify to the previous rows clusters gets a new color}

\item{matchToTop}{Logical as to whether all clusters should be aligned to
the first row. By default (FALSE) each cluster is aligned to the ordered
clusters of the row above it.}

\item{plot}{Logical as to whether a plot should be produced.}

\item{unassignedColor}{If ``-1'' in clusters, will be given this color (meant for samples not assigned to cluster).}

\item{missingColor}{If ``-2'' in clusters, will be given this color (meant for samples that were missing from the clustering, mainly when comparing clusterings run on different sets of samples)}

\item{minRequireColor}{In aligning colors between rows of clusters, require
this percent overlap}

\item{startNewColors}{logical, indicating whether in aligning colors between rows of clusters,
should the colors restart at beginning of colPalette as long as colors are not in immediately proceeding row
(some of the colors at the end of bigPalette are a bit wonky, and so if you
have a large clusters matrix, this can be useful)}

\item{colPalette}{a vector of colors used for the different clusters.}

\item{...}{for \code{plotTracking} arguments passed to \code{clusterTracking}. For \code{clusterTracking}, arguments passed to \code{\link{plot}} if \code{add=FALSE}.}

\item{colorMat}{Matrix where rows are different clusterings, columns are samples,
and entries of matrix are colors (i.e. characters that define colors)}

\item{names}{names to go with the rows (clusterings) in matrix m}

\item{add}{whether to add to existing plot}

\item{x}{values on x-axis at which to plot the columns of m}

\item{ylim}{vector of limits of y-axis}

\item{tick}{logical, whether to draw ticks on x-axis for each sample.}

\item{ylab}{character string for the label of y-axis}

\item{xlab}{character string for the label of x-axis}

\item{axisLine}{the number of lines in the axis labels on y-axis should be (passed to line=... in the axis call)}

\item{box}{logical, whether to draw box around the plot}
}
\value{
plotTracking provides (invisibly) the orders and other things that
go into making the matrix. Specifically, a list with the following elements
\itemize{

\item{\code{index}}{ a vector of length equal to ncols(clusters) giving the order of the columns to use to get the original clusters matrix into the order made by plotTracking}

\item{\code{colors}}{ matrix of color assignments for each element of original clusters matrix. Matrix is in the same order as original clusters matrix. The matrix colors[,index] is the matrix sent to clusterTrackingPlot}

\item{\code{aligned}}{ matrix of integer valued cluster assignments that match the colors. this is useful if you want to have cluster identification numbers that are better aligned than that given in the original clusters. Again, matrix is in same order as original clusters matrix}

\item{\code{groupToColorLegend}}{ matrix with three columns named "Original","Aligned", and "Color" giving the correspondence between the original cluster ids in clusters, the aligned cluster ids in aligned cluster values, and the color (respectively) }
}
}
\description{
Align clusters of the same set of samples and provide a plot of their shared
values
}
\details{
clusterTrackingPlot is generally called within plotTracking, but is provided
as separate function for convenience, for example if you want to manually change a
color in the output of plotTracking and replot.
}
\examples{
#clustering using pam: try using different dimensions of pca and different k
ps<-c(5,10,50)
names(ps)<-paste("npc=",ps,sep="")
pcaData<-stats::prcomp(simData, center=TRUE, scale=TRUE)
cl <- compareChoices(lapply(ps,function(p){pcaData$x[,1:p]}), clusterMethod="pam",ks=2:4,findBestK=c(TRUE,FALSE))
colnames(cl$clMat)
#make names shorter for plotting
colnames(cl$clMat)<-gsub("TRUE","T",colnames(cl$clMat))
colnames(cl$clMat)<-gsub("FALSE","F",colnames(cl$clMat))
colnames(cl$clMat)<-gsub("k=NA,","",colnames(cl$clMat))
par(mar=c(2,10,1,1))
out<-plotTracking(cl$clMat,axisLine=-2)
out$groupToColorLegend[1:2]
head(out$color[out$index,1:2])

#notice that the blue and orange are really arbitrarily different colors because not next to each other in row.
#We can manually change the blue to orange :
#first find out color names by looking at the out$colors (but in right order using out$index)
out$colors[out$index[1:10],c("npc=5,k=NA,findBestK=TRUE","npc=5,k=3,findBestK=FALSE")]
#change "#1F78B4" to "#FF7F00"
newColorMat<-out$colors
newColorMat[newColorMat=="#1F78B4"]<-"#FF7F00"
#replot by calling clusterTrackingPlot directly
clusterTrackingPlot(newColorMat[out$index,])

#We can also change the order of the rows. Notice how this dramatically changes the plot!
plotTracking(cl$clMat[,c(3:6,1:2,7:ncol(cl$clMat))],axisLine=-2)
}
\author{
Elizabeth Purdom and Marla Johnson
}

