% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllClasses.R, R/AllHelper.R
\docType{class}
\name{ClusterCells-class}
\alias{ClusterCells}
\alias{ClusterCells-class}
\alias{addClusters,ClusterCells,ClusterCells-method}
\alias{addClusters,ClusterCells,matrix-method}
\alias{addClusters,ClusterCells,numeric-method}
\alias{allClusters,ClusterCells-method}
\alias{clusterCells}
\alias{clusterInfo,ClusterCells-method}
\alias{clusterType,ClusterCells-method}
\alias{coClustering,ClusterCells-method}
\alias{dendrogram,ClusterCells-method}
\alias{isLog,ClusterCells-method}
\alias{primaryCluster,ClusterCells-method}
\alias{primaryClusterIndex,ClusterCells-method}
\alias{primaryClusterIndex<-,ClusterCells,numeric-method}
\alias{removeUnclustered,ClusterCells-method}
\alias{show,ClusterCells-method}
\title{ClusterCells object and constructor}
\usage{
clusterCells(se, labels, isLog)

\S4method{show}{ClusterCells}(object)

\S4method{isLog}{ClusterCells}(x)

\S4method{allClusters}{ClusterCells}(x)

\S4method{primaryCluster}{ClusterCells}(x)

\S4method{primaryClusterIndex}{ClusterCells}(x)

\S4method{primaryClusterIndex}{ClusterCells,numeric}(object) <- value

\S4method{coClustering}{ClusterCells}(x)

\S4method{dendrogram}{ClusterCells}(x)

\S4method{clusterType}{ClusterCells}(x)

\S4method{addClusters}{ClusterCells,matrix}(x, y)

\S4method{addClusters}{ClusterCells,numeric}(x, y)

\S4method{addClusters}{ClusterCells,ClusterCells}(x, y)

\S4method{removeUnclustered}{ClusterCells}(x)

\S4method{clusterInfo}{ClusterCells}(x)
}
\arguments{
\item{se}{a matrix or \code{SummarizedExperiment} containing the clustered
data.}

\item{labels}{a vector with cluster labels.}

\item{isLog}{logical. Whether the data are in log (TRUE) or linear (FALSE)
scale.}
}
\value{
A \code{ClusterCells} object.
}
\description{
\code{ClusterCells} is a class that extends \code{SummarizedExperiment},
used to store the single-cell RNA-seq data and clustering information.
In addition to the slots of the \code{SummarizedExperiment} class, the
\code{ClusterCells} object has the following additional slots:
\itemize{
\item isLog: logical. Whether the data are in the linear or log scale.
\item clusterLabels: matrix. A matrix giving the
integer-valued cluster ids for each sample. The rows of the matrix correspond to clusterings and columns to samples. 
The integer values are assigned
in the order that the clusters were found, if found by setting sequential=TRUE in clusterAll. "-1" indicates
the sample was not clustered.
\item primaryIndex: numeric. An index that specifies the primary set of
labels.
\item clusterInfo: list. A list with info about the clustering.
\itam clusterType: character vector with the origin of each column of
clusterLabels.
\item dendrogram: dendrogram. A dendrogram containing the cluster
relationship.
\item coClustering: matrix. A matrix with the cluster co-occurrence
information; this can either be based on subsampling or on co-clustering
across parameter sets (see \code{compareChoices}). The matrix is a square matrix with number of rows/columns equal to the number of samples.
}
}
\details{
If created from \code{\link{clusterAll}}, clusterInfo will include the
parameter used for the call, and the call itself. If \code{sequential = TRUE}
it will also include the following components.

\itemize{
\item{\code{clusterInfo}}{if sequential=TRUE and clusters were successfully
found, a matrix of information regarding the algorithm behavior for each
cluster (the starting and stopping K for each cluster, and the number of
iterations for each cluster).}
\item{\code{whyStop}}{if sequential=TRUE and clusters were successfully
found, a character string explaining what triggered the algorithm to stop.}
}

The constructor \code{clusterCells} creates an object of the class
\code{ClusterCells}. However, the typical way of creating these objects is
the result of a call to \code{compareChoices} or \code{clusterAll}.

Note that when subsetting the data, the co-clustering and dendrogram
information are lost.
}
\examples{

se <- matrix(data=rnorm(200), ncol=10)
labels <- gl(5, 2)

cc <- clusterCells(se, as.numeric(labels), isLog = TRUE)

}

